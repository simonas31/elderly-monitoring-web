/** @type {import('tailwindcss').Config} */
export default {
    content: [
        "./resources/views/index",
        "./resources/js/**/*.{vue,js,ts,jsx,tsx}",
        "./node_modules/flowbite/**/*.js",
    ],
    theme: {
        fontSize: {
            sm: "0.750rem",
            base: "1rem",
            xl: "1.333rem",
            "2xl": "1.777rem",
            "3xl": "2.369rem",
            "4xl": "3.158rem",
            "5xl": "4.210rem",
        },
        fontFamily: {
            heading: "Noto Sans JP",
            body: "Noto Sans JP",
        },
        fontWeight: {
            normal: "400",
            bold: "700",
        },
        extend: {
            transitionProperty: {
                height: "height",
            },
            colors: {
                text: {
                    50: "rgb(var(--text-50) / <alpha-value>)",
                    100: "rgb(var(--text-100) / <alpha-value>)",
                    200: "rgb(var(--text-200) / <alpha-value>)",
                    300: "rgb(var(--text-300) / <alpha-value>)",
                    400: "rgb(var(--text-400) / <alpha-value>)",
                    500: "rgb(var(--text-500) / <alpha-value>)",
                    600: "rgb(var(--text-600) / <alpha-value>)",
                    700: "rgb(var(--text-700) / <alpha-value>)",
                    800: "rgb(var(--text-800) / <alpha-value>)",
                    900: "rgb(var(--text-900) / <alpha-value>)",
                    950: "rgb(var(--text-950) / <alpha-value>)",
                },
                background: {
                    50: "rgb(var(--background-50) / <alpha-value>)",
                    100: "rgb(var(--background-100) / <alpha-value>)",
                    200: "rgb(var(--background-200) / <alpha-value>)",
                    300: "rgb(var(--background-300) / <alpha-value>)",
                    400: "rgb(var(--background-400) / <alpha-value>)",
                    500: "rgb(var(--background-500) / <alpha-value>)",
                    600: "rgb(var(--background-600) / <alpha-value>)",
                    700: "rgb(var(--background-700) / <alpha-value>)",
                    800: "rgb(var(--background-800) / <alpha-value>)",
                    900: "rgb(var(--background-900) / <alpha-value>)",
                    950: "rgb(var(--background-950) / <alpha-value>)",
                },
                primary: {
                    50: "rgb(var(--primary-50) / <alpha-value>)",
                    100: "rgb(var(--primary-100) / <alpha-value>)",
                    200: "rgb(var(--primary-200) / <alpha-value>)",
                    300: "rgb(var(--primary-300) / <alpha-value>)",
                    400: "rgb(var(--primary-400) / <alpha-value>)",
                    500: "rgb(var(--primary-500) / <alpha-value>)",
                    600: "rgb(var(--primary-600) / <alpha-value>)",
                    700: "rgb(var(--primary-700) / <alpha-value>)",
                    800: "rgb(var(--primary-800) / <alpha-value>)",
                    900: "rgb(var(--primary-900) / <alpha-value>)",
                    950: "rgb(var(--primary-950) / <alpha-value>)",
                },
                secondary: {
                    50: "rgb(var(--secondary-50) / <alpha-value>)",
                    100: "rgb(var(--secondary-100) / <alpha-value>)",
                    200: "rgb(var(--secondary-200) / <alpha-value>)",
                    300: "rgb(var(--secondary-300) / <alpha-value>)",
                    400: "rgb(var(--secondary-400) / <alpha-value>)",
                    500: "rgb(var(--secondary-500) / <alpha-value>)",
                    600: "rgb(var(--secondary-600) / <alpha-value>)",
                    700: "rgb(var(--secondary-700) / <alpha-value>)",
                    800: "rgb(var(--secondary-800) / <alpha-value>)",
                    900: "rgb(var(--secondary-900) / <alpha-value>)",
                    950: "rgb(var(--secondary-950) / <alpha-value>)",
                },
                accent: {
                    50: "rgb(var(--accent-50) / <alpha-value>)",
                    100: "rgb(var(--accent-100) / <alpha-value>)",
                    200: "rgb(var(--accent-200) / <alpha-value>)",
                    300: "rgb(var(--accent-300) / <alpha-value>)",
                    400: "rgb(var(--accent-400) / <alpha-value>)",
                    500: "rgb(var(--accent-500) / <alpha-value>)",
                    600: "rgb(var(--accent-600) / <alpha-value>)",
                    700: "rgb(var(--accent-700) / <alpha-value>)",
                    800: "rgb(var(--accent-800) / <alpha-value>)",
                    900: "rgb(var(--accent-900) / <alpha-value>)",
                    950: "rgb(var(--accent-950) / <alpha-value>)",
                },
            },
        },
    },
    plugins: [
        require("postcss-import"),
        require("tailwindcss/nesting"),
        require("autoprefixer"),
        require("tailwindcss"),
    ],
};
